x-kong-config: &kong-env
  KONG_DATABASE: postgres # Use Postgres as the backing database
  KONG_PG_HOST: ogna-database # Hostname of the Postgres service
  KONG_PG_DATABASE: ${POSTGRES_DB} # Name of the database to connect to
  KONG_PG_USER: ${POSTGRES_USER} # Database username
  KONG_PG_PASSWORD: ${POSTGRES_PASSWORD} # Database password
services:
  kong-bootstrap:
    image: kong/kong-gateway:3.12.0.0
    container_name: kong-bootstrap
    networks:
      - ogna
    depends_on:
      ogna-database:
        condition: service_healthy
    restart: on-failure
    environment:
      <<: *kong-env
    command: kong migrations bootstrap # Run DB migrations to initialize Kong schema

  kong-cp:
    image: kong/kong-gateway:3.12.0.0
    container_name: kong-cp
    restart: unless-stopped
    networks:
      - ogna
    environment:
      <<: *kong-env
      KONG_PLUGINS: bundled,acme,cors
      KONG_LUA_SSL_TRUSTED_CERTIFICATE: system
      KONG_NGINX_HTTP_LUA_SHARED_DICT: acme_storage 10m
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      # Logging (optional but recommended)
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_LOG_LEVEL: ${KONG_LOG_LEVEL:-notice}
    depends_on:
      kong-bootstrap:
        condition: service_completed_successfully
      ogna-database:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 30s # Give Kong time to start
    expose:
      - "8001"
    ports:
      - "80:8000"
      - "443:8443"
    volumes:
      - ./config/kong.yaml:/kong/kong.yaml:ro
      - ./acme:/usr/local/kong/acme
    env_file:
      - .env

  ogna-database:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - "5432"
    networks:
      - ogna
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-ogna_user} -d ${POSTGRES_DB:-ogna_db}",
        ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 10s
    restart: unless-stopped
    env_file:
      - .env

  deck-sync:
    image: kong/deck:latest
    depends_on:
      kong-cp:
        condition: service_healthy
    networks:
      - ogna
    volumes:
      - ./config:/kong-extra
    command:
      [
        "gateway",
        "sync",
        "--kong-addr",
        "http://kong-cp:8001",
        "/kong-extra/kong.yaml",
      ]

volumes:
  postgres_data:
    driver: local

networks:
  ogna:
    name: ogna
    driver: bridge
